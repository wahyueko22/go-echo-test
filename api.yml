# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /register:
    post:
      summary: Rgister a new user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterSuccessResponse"
        '400':
          description: Bad Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterErrorResponse"
  /login:
    post:
      summary: login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccessResponse"
        '400':
          description: Bad Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginErrorResponse"
  /my-profile:
    get:
      summary: It is end point to fetch of user login profile.
      operationId: myProfile
      responses:
        '200':
          description: return data
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MyProfileSuccessResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfileErrorResponse"
  /update-profile:
    post:
      summary: it is endpoint for updating profile
      operationId: updateProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileSuccessResponse"
        '400':
          description: Bad Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileErrorResponse"
components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegisterRequest:
      type: object
      required:
        - password
        - fullname
        - phone_number
      properties:
        password:
          type: string
        fullname:
          type: string
        phone_number:
          type: string
    RegisterSuccessResponse:
      type: object
      required:
        - id
      properties:
        id :
          type: integer
    RegisterErrorResponse:
      type: object
      additionalProperties:
        type: string
    LoginRequest:
      type: object
      required:
        - password
        - phone_number
      properties:
        password:
          type: string
        phone_number:
          type: string
    LoginSuccessResponse:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
    LoginErrorResponse:
      type: object
    MyProfileSuccessResponse:
      type: object
      required:
        - name
        - phone_number
      properties:
        name :
          type: string
        phone_number :
          type: string
    MyProfileErrorResponse:
      type: object
    UpdateProfileRequest:
      type: object
      required:
        - fullname
        - phone_number
      properties:
        fullname:
          type: string
        phone_number:
          type: string
    UpdateProfileSuccessResponse:
      type: object
    UpdateProfileErrorResponse:
      type: object
        